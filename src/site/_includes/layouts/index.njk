<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>
    {%include "components/pageheader.njk"%}
    {% for imp in dynamics.common.head %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.index.head %}
      {% include imp %}
    {% endfor %}
  </head>
  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">
  

    {%include "components/notegrowthhistory.njk"%}
    {% if settings.dgShowFileTree !== true %}
      {%include "components/navbar.njk"%}
    {%else%}
      {%include "components/filetree.njk"%}
    {% endif %}
    {% if settings.dgEnableSearch === true %}
      {%include "components/searchContainer.njk"%}
    {% endif %}
    <main class="content cm-s-obsidian {{contentClasses}}">
      <header>
      {% if settings.dgShowInlineTitle === true %}
        <h1>{{ noteTitle  }}</h1>
      {% endif %}
      <div class="header-meta">
        {% if settings.dgShowTags === true and tags %}
          <div class="header-tags">
            {% for tag in tags %}
              {% if tag != 'gardenEntry' and tag !='note' %}
                <a class="tag" onclick="toggleTagSearch(this)">
                  #{{tag}}
                </a>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>
      {% for imp in dynamics.common.header %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.index.header %}
        {% include imp %}
      {% endfor %}
      </header>
      {% for imp in dynamics.common.beforeContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.index.beforeContent %}
        {% include imp %}
      {% endfor %}
      {{ content | hideDataview | taggify | link | safe}}
      {% for imp in dynamics.common.afterContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.index.afterContent %}
        {% include imp %}
      {% endfor %}
    </main>
    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true%}
      {%include "components/sidebar.njk" %}
    {%endif%}
    {% if settings.dgLinkPreview === true %}
      {%include "components/linkPreview.njk"%}
    {% endif %}
    {% for imp in dynamics.common.footer %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.index.footer %}
      {% include imp %}
    {% endfor %}
    {%include "components/lucideIcons.njk"%}
    {% include "components/particlesScript.njk" %}

    <!-- Galaxy Star Field Generator -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const starField = document.getElementById('starField');
        const starCount = window.innerWidth < 768 ? 100 : 200; // Fewer stars on mobile
        
        // Create random stars
        for (let i = 0; i < starCount; i++) {
          const star = document.createElement('div');
          star.className = 'star';
          
          // Random position
          const x = Math.random() * 100;
          const y = Math.random() * 100;
          star.style.left = x + '%';
          star.style.top = y + '%';
          
          // Random size
          const sizeRand = Math.random();
          if (sizeRand < 0.7) {
            star.classList.add('small');
          } else if (sizeRand < 0.9) {
            star.classList.add('medium');
          } else {
            star.classList.add('large');
          }
          
          // Random color (10% chance for colored stars)
          const colorRand = Math.random();
          if (colorRand < 0.03) {
            star.classList.add('golden');
          } else if (colorRand < 0.06) {
            star.classList.add('rose');
          } else if (colorRand < 0.09) {
            star.classList.add('teal');
          }
          
          // Random animation delay
          star.style.animationDelay = Math.random() * 3 + 's';
          
          starField.appendChild(star);
        }
        
        // Add more shooting stars periodically
        setInterval(() => {
          if (Math.random() < 0.3) { // 30% chance every 5 seconds
            const shootingStar = document.createElement('div');
            shootingStar.className = 'shooting-star';
            shootingStar.style.top = Math.random() * 70 + '%';
            shootingStar.style.left = '-10%';
            shootingStar.style.animationDelay = '0s';
            
            document.querySelector('.galaxy-skybox').appendChild(shootingStar);
            
            // Remove after animation
            setTimeout(() => {
              shootingStar.remove();
            }, 8000);
          }
        }, 5000);
      });
    </script>
  </body>
</html>
