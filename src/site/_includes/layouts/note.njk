---
permalink: "notes/{{ page.fileSlug | slugify }}/"
---
<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>
    {%include "components/pageheader.njk"%}
    {% for imp in dynamics.common.head %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.notes.head %}
      {% include imp %}
    {% endfor %}
  </head>
  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">
<button class="fullscreen-btn" id="fullscreenBtn">
  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
  </svg>
  <span>Focus Mode</span>
</button>
    {%include "components/notegrowthhistory.njk"%}
    
    {% if settings.dgShowFileTree !== true %}
      {%include "components/navbar.njk"%}
    {%else%}
      {%include "components/filetree.njk"%}
    {% endif %}

    {% if settings.dgEnableSearch === true %}
      {%include "components/searchContainer.njk"%}
    {% endif %}

    <main class="content cm-s-obsidian {{contentClasses}}">
      <header>
        {% if settings.dgShowInlineTitle === true %}
          <h1 data-note-icon="{% if noteIcon %}{{noteIcon}}{% else %}{{meta.noteIconsSettings.default}}{% endif %}">{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</h1>
        {% endif %}
        <div class="header-meta">
          {% if settings.dgShowTags === true and tags %}
            <div class="header-tags">
              {% for tag in tags %}
                {% if tag != 'gardenEntry' and tag !='note' %}
                  <a class="tag" onclick="toggleTagSearch(this)">
                    #{{tag}}
                  </a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}
          {%- if meta.timestampSettings.showCreated or meta.timestampSettings.showUpdated -%}
          <div class="timestamps">
            {%- if meta.timestampSettings.showCreated and created -%}
            <div><i icon-name="calendar-plus"></i> <span class="human-date" data-date="{{created}}"></span></div>
            {%- endif -%}
            {%- if meta.timestampSettings.showUpdated and updated -%}
            <div><i icon-name="calendar-clock"></i> <span class="human-date" data-date="{{updated}}"></span></div>
            {%- endif -%}
          </div>
          {%- endif -%}
        </div>
      {% for imp in dynamics.common.header %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.header %}
        {% include imp %}
      {% endfor %}
      </header>
      {% for imp in dynamics.common.beforeContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.beforeContent %}
        {% include imp %}
      {% endfor %}
      {{ content | hideDataview | taggify | link | safe}}
      {% for imp in dynamics.common.afterContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.afterContent %}
        {% include imp %}
      {% endfor %}
    </main>

    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true%}
      {%include "components/sidebar.njk"%}
    {% endif %}

    {% if settings.dgLinkPreview === true %}
      {%include "components/linkPreview.njk"%}
    {% endif %}
    {% include "components/references.njk" %}
    {% include "components/timestamps.njk" %}
    {% for imp in dynamics.common.footer %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.notes.footer %}
      {% include imp %}
    {% endfor %}
    {%include "components/lucideIcons.njk"%}
    {% include "components/particlesScript.njk" %}
    <link rel="stylesheet" href="/styles/datetime-display.css">
    <script src="/scripts/datetime-display.js"></script>
<div class="video-background">
  <video autoplay muted loop playsinline preload="auto">
    <source src="/img/video/Astrogalaxy1.webm" type="video/webm">
    <!-- Optional: Add MP4 fallback if you have one -->
    <!-- <source src="/img/video/Astrogalaxy1.mp4" type="video/mp4"> -->
  </video>
<script>
// Fullscreen Note Feature (Focus Mode)
(function() {
  let isFullscreen = false;

  const fullscreenBtn = document.getElementById('fullscreenBtn');
  if (!fullscreenBtn) return;

  function toggleFullscreen() {
    isFullscreen = !isFullscreen;

    if (isFullscreen) {
      document.body.classList.add('fullscreen-mode');
      fullscreenBtn.innerHTML = `
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"/>
        </svg>
        <span>Exit Focus</span>
      `;
    } else {
      document.body.classList.remove('fullscreen-mode');
      fullscreenBtn.innerHTML = `
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
        </svg>
        <span>Focus Mode</span>
      `;
    }

    // After toggling the class, give the browser a moment then dispatch resize
    // so that embedded widgets (Excalidraw, flashcards, etc.) can recalc.
    setTimeout(() => {
      window.dispatchEvent(new Event('resize'));
      // If needed: call specific re-render functions here, e.g.:
      // if (window.Excalidraw && typeof window.Excalidraw.recalcSize === 'function') {
      //   window.Excalidraw.recalcSize();
      // }
    }, 100);
  }

  // Button click handler
  fullscreenBtn.addEventListener('click', toggleFullscreen);

  // F11 keyboard shortcut: toggle focus mode (prevent default fullscreen)
  document.addEventListener('keydown', function(e) {
    if (e.key === 'F11') {
      e.preventDefault();
      toggleFullscreen();
    }
  });

  // Escape to exit focus mode
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && isFullscreen) {
      toggleFullscreen();
    }
  });

  // Optional: Auto-hide cursor after inactivity in focus mode
  let cursorTimeout;
  function resetCursorTimeout() {
    clearTimeout(cursorTimeout);
    document.body.style.cursor = 'default';

    if (isFullscreen) {
      cursorTimeout = setTimeout(() => {
        document.body.style.cursor = 'none';
      }, 4000);
    }
  }
  document.addEventListener('mousemove', resetCursorTimeout);
  document.addEventListener('mousedown', resetCursorTimeout);
})();
</script>
</div>
  </body>
</html>
