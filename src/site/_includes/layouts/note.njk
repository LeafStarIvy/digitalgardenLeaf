---
permalink: "notes/{{ page.fileSlug | slugify }}/"
---
<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>

    {% include "components/pageheader.njk" %}
    {% for imp in dynamics.common.head %}{% include imp %}{% endfor %}
    {% for imp in dynamics.notes.head %}{% include imp %}{% endfor %}

    <link rel="stylesheet" href="/styles/custom.css">
  </head>

  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">

    <button class="fullscreen-btn" id="fullscreenBtn" aria-pressed="false" title="Toggle Focus Mode">
      <svg class="fs-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8" aria-hidden="true"><path d="M8 3H5a2 2 0 0 0-2 2v3"/><path d="M16 3h3a2 2 0 0 1 2 2v3"/><path d="M8 21H5a2 2 0 0 1-2-2v-3"/><path d="M16 21h3a2 2 0 0 0 2-2v-3"/></svg>
      <span class="fs-label">Focus Mode</span>
    </button>

    {% include "components/notegrowthhistory.njk" %}
    {% if settings.dgShowFileTree !== true %}
      {% include "components/navbar.njk" %}
    {% else %}
      {% include "components/filetree.njk" %}
    {% endif %}
    {% if settings.dgEnableSearch === true %}
      {% include "components/searchContainer.njk" %}
    {% endif %}

    <!-- Unified galaxy skybox (same as index) -->
    <div class="galaxy-skybox" id="galaxySkybox" aria-hidden="true">
      <div class="nebula nebula--back"></div>
      <div class="nebula nebula--mid"></div>
      <div class="nebula nebula--front"></div>
      <div id="shootingStarContainer" class="shooting-stars" aria-hidden="true"></div>
    </div>

    <main class="content cm-s-obsidian {{contentClasses}}">
      <header class="site-header">
        {% if settings.dgShowInlineTitle === true %}
          <h1 class="site-title" data-note-icon="{% if noteIcon %}{{noteIcon}}{% else %}{{meta.noteIconsSettings.default}}{% endif %}">
            {% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}
          </h1>
        {% endif %}

        <div class="header-meta">
          {% if settings.dgShowTags === true and tags %}
            <div class="header-tags">
              {% for tag in tags %}
                {% if tag != 'gardenEntry' and tag != 'note' %}
                  <a class="tag" onclick="toggleTagSearch(this)">#{{tag}}</a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}

          {%- if meta.timestampSettings.showCreated or meta.timestampSettings.showUpdated -%}
          <div class="timestamps">
            {%- if meta.timestampSettings.showCreated and created -%}
            <div><i icon-name="calendar-plus"></i> <span class="human-date" data-date="{{created}}"></span></div>
            {%- endif -%}
            {%- if meta.timestampSettings.showUpdated and updated -%}
            <div><i icon-name="calendar-clock"></i> <span class="human-date" data-date="{{updated}}"></span></div>
            {%- endif -%}
          </div>
          {%- endif -%}
        </div>

        {% for imp in dynamics.common.header %}{% include imp %}{% endfor %}
        {% for imp in dynamics.notes.header %}{% include imp %}{% endfor %}
      </header>

      {% for imp in dynamics.common.beforeContent %}{% include imp %}{% endfor %}
      {% for imp in dynamics.notes.beforeContent %}{% include imp %}{% endfor %}

      <article class="garden-article">
        {{ content | hideDataview | taggify | link | safe }}
      </article>

      {% for imp in dynamics.common.afterContent %}{% include imp %}{% endfor %}
      {% for imp in dynamics.notes.afterContent %}{% include imp %}{% endfor %}
    </main>

    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true %}
      {% include "components/sidebar.njk" %}
    {% endif %}
    {% if settings.dgLinkPreview === true %}
      {% include "components/linkPreview.njk" %}
    {% endif %}
    {% include "components/references.njk" %}
    {% include "components/timestamps.njk" %}
    {% for imp in dynamics.common.footer %}{% include imp %}{% endfor %}
    {% for imp in dynamics.notes.footer %}{% include imp %}{% endfor %}
    {% include "components/lucideIcons.njk" %}

    {% include "components/particlesScript.njk" %}

{# --- Note header (optional) --- #}
<div class="note-toolbar">
  <button id="theater-toggle"
          class="theater-btn"
          aria-pressed="false"
          aria-label="Enter theater mode"
          title="Theater mode">
    ðŸŽ¬ Theater
  </button>
</div>

{# --- Wrap your note content in a stable container --- #}
<article id="note-content" class="note-content" data-note-id="{{ page.url | urlencode }}">
  {{ content | safe }}
</article>

{# --- Theater root (overlay) gets injected once per page --- #}
<div id="theater-root" aria-hidden="true" hidden>
  <div id="theater-backdrop"></div>
  <div id="theater-stage" role="dialog" aria-modal="true" aria-label="Theater view">
    <!-- we will move #note-content here while theater is active -->
  </div>
</div>

<script>
(function () {
  const btn = document.getElementById('theater-toggle');
  const note = document.getElementById('note-content');
  const root = document.getElementById('theater-root');
  const stage = document.getElementById('theater-stage');
  const backdrop = document.getElementById('theater-backdrop');

  if (!btn || !note || !root || !stage || !backdrop) return;

  // Keep the spot where the note originally lives
  const placeholder = document.createElement('div');
  placeholder.id = 'note-return-anchor';
  note.after(placeholder);

  let lastFocused = null;

  function enterTheater() {
    if (root.dataset.active === 'true') return;

    lastFocused = document.activeElement;

    // Reveal overlay
    root.hidden = false;
    root.dataset.active = 'true';
    document.body.classList.add('theater-open');
    document.documentElement.classList.add('theater-open');
    root.setAttribute('aria-hidden', 'false');
    btn.setAttribute('aria-pressed', 'true');

    // Move the note into the stage
    note.classList.add('theater-note');
    stage.appendChild(note);

    // Focus management
    stage.setAttribute('tabindex', '-1');
    stage.focus({ preventScroll: true });

    // Prevent page scroll behind overlay
    document.body.dataset.scrollY = window.scrollY;
    document.body.style.top = `-${window.scrollY}px`;
    document.body.classList.add('scroll-lock');

    // Close handlers
    window.addEventListener('keydown', onKeyDown);
    backdrop.addEventListener('click', exitTheater, { once: true });
  }

  function exitTheater() {
    if (root.dataset.active !== 'true') return;

    // Return the note to its original spot
    placeholder.before(note);
    note.classList.remove('theater-note');

    // Hide overlay
    root.dataset.active = 'false';
    root.setAttribute('aria-hidden', 'true');
    document.body.classList.remove('theater-open');
    document.documentElement.classList.remove('theater-open');
    btn.setAttribute('aria-pressed', 'false');

    // Unlock scroll and restore
    document.body.classList.remove('scroll-lock');
    const y = parseInt(document.body.dataset.scrollY || '0', 10);
    document.body.style.top = '';
    window.scrollTo(0, y);

    // Return focus to trigger
    if (lastFocused && lastFocused.focus) lastFocused.focus();

    // Give CSS time to fade out, then hide root to avoid tab stops
    setTimeout(() => { root.hidden = true; }, 300);

    window.removeEventListener('keydown', onKeyDown);
  }

  function onKeyDown(e) {
    if (e.key === 'Escape') exitTheater();
  }

  btn.addEventListener('click', () => {
    if (root.dataset.active === 'true') exitTheater();
    else enterTheater();
  });
})();
</script>

  </body>
</html>
