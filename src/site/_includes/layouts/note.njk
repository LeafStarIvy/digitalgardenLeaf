---
permalink: "notes/{{ page.fileSlug | slugify }}/"
---
<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>

    {% include "components/pageheader.njk" %}
    {% for imp in dynamics.common.head %}{% include imp %}{% endfor %}
    {% for imp in dynamics.notes.head %}{% include imp %}{% endfor %}

    <link rel="stylesheet" href="/styles/custom.css">
  </head>

  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">

    <button class="fullscreen-btn" id="fullscreenBtn" aria-pressed="false" title="Toggle Focus Mode">
      <svg class="fs-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8" aria-hidden="true"><path d="M8 3H5a2 2 0 0 0-2 2v3"/><path d="M16 3h3a2 2 0 0 1 2 2v3"/><path d="M8 21H5a2 2 0 0 1-2-2v-3"/><path d="M16 21h3a2 2 0 0 0 2-2v-3"/></svg>
      <span class="fs-label">Focus Mode</span>
    </button>

    {% include "components/notegrowthhistory.njk" %}
    {% if settings.dgShowFileTree !== true %}
      {% include "components/navbar.njk" %}
    {% else %}
      {% include "components/filetree.njk" %}
    {% endif %}
    {% if settings.dgEnableSearch === true %}
      {% include "components/searchContainer.njk" %}
    {% endif %}

    <!-- Unified galaxy skybox (same as index) -->
    <div class="galaxy-skybox" id="galaxySkybox" aria-hidden="true">
      <div class="nebula nebula--back"></div>
      <div class="nebula nebula--mid"></div>
      <div class="nebula nebula--front"></div>
      <div id="shootingStarContainer" class="shooting-stars" aria-hidden="true"></div>
    </div>

    <main class="content cm-s-obsidian {{contentClasses}}">
      <header class="site-header">
        {% if settings.dgShowInlineTitle === true %}
          <h1 class="site-title" data-note-icon="{% if noteIcon %}{{noteIcon}}{% else %}{{meta.noteIconsSettings.default}}{% endif %}">
            {% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}
          </h1>
        {% endif %}

        <div class="header-meta">
          {% if settings.dgShowTags === true and tags %}
            <div class="header-tags">
              {% for tag in tags %}
                {% if tag != 'gardenEntry' and tag != 'note' %}
                  <a class="tag" onclick="toggleTagSearch(this)">#{{tag}}</a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}

          {%- if meta.timestampSettings.showCreated or meta.timestampSettings.showUpdated -%}
          <div class="timestamps">
            {%- if meta.timestampSettings.showCreated and created -%}
            <div><i icon-name="calendar-plus"></i> <span class="human-date" data-date="{{created}}"></span></div>
            {%- endif -%}
            {%- if meta.timestampSettings.showUpdated and updated -%}
            <div><i icon-name="calendar-clock"></i> <span class="human-date" data-date="{{updated}}"></span></div>
            {%- endif -%}
          </div>
          {%- endif -%}
        </div>

        {% for imp in dynamics.common.header %}{% include imp %}{% endfor %}
        {% for imp in dynamics.notes.header %}{% include imp %}{% endfor %}
      </header>

      {% for imp in dynamics.common.beforeContent %}{% include imp %}{% endfor %}
      {% for imp in dynamics.notes.beforeContent %}{% include imp %}{% endfor %}

      <article class="garden-article">
        {{ content | hideDataview | taggify | link | safe }}
      </article>

      {% for imp in dynamics.common.afterContent %}{% include imp %}{% endfor %}
      {% for imp in dynamics.notes.afterContent %}{% include imp %}{% endfor %}
    </main>

    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true %}
      {% include "components/sidebar.njk" %}
    {% endif %}
    {% if settings.dgLinkPreview === true %}
      {% include "components/linkPreview.njk" %}
    {% endif %}
    {% include "components/references.njk" %}
    {% include "components/timestamps.njk" %}
    {% for imp in dynamics.common.footer %}{% include imp %}{% endfor %}
    {% for imp in dynamics.notes.footer %}{% include imp %}{% endfor %}
    {% include "components/lucideIcons.njk" %}

    {% include "components/particlesScript.njk" %}

{# ===== Overlays for Theatre mode ===== #}
<div class="dg-ambient" aria-hidden="true"></div>
<div class="dg-vignette" aria-hidden="true"></div>
<div class="dg-grain" aria-hidden="true"></div>

{# ===== View controls (top-right) ===== #}
<div class="dg-viewbar" id="dg-viewbar" role="group" aria-label="View controls">
  <button id="dg-fullscreen-toggle"
          class="dg-btn dg-btn--fullscreen"
          type="button"
          aria-pressed="false"
          title="Fullscreen (F)">
    <svg viewBox="0 0 24 24" aria-hidden="true">
      <path d="M7 3h4v2H9v2H7V3Zm10 0v4h-2V5h-2V3h4ZM7 17v4h4v-2H9v-2H7Zm8 2v2h4v-4h-2v2h-2Z"/>
    </svg>
    <span>Fullscreen</span>
  </button>

  <button id="dg-theatre-toggle"
          class="dg-btn dg-btn--theatre"
          type="button"
          aria-pressed="false"
          title="Theatre mode (T)">
    <svg viewBox="0 0 24 24" aria-hidden="true">
      <path d="M4 6h16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2Zm1 2v8h14V8H5Z"/>
    </svg>
    <span>Theatre</span>
  </button>
</div>

<script>
(() => {
  const body = document.body;
  const fsBtn = document.getElementById('dg-fullscreen-toggle');
  const thBtn = document.getElementById('dg-theatre-toggle');

  const isFS = () => body.classList.contains('dg-fullscreen');
  const isTH = () => body.classList.contains('dg-theatre');

  function applyState(fromStorage = false) {
    fsBtn?.setAttribute('aria-pressed', String(isFS()));
    thBtn?.setAttribute('aria-pressed', String(isTH()));
    thBtn.style.display = isFS() ? '' : 'none';
    if (!fromStorage) {
      try { localStorage.setItem('dg:view', JSON.stringify({ fs: isFS(), th: isTH() })); } catch {}
    }
  }

  async function enterBrowserFullscreen() {
    try {
      const el = document.documentElement;
      if (!document.fullscreenElement && el.requestFullscreen) {
        await el.requestFullscreen({ navigationUI: 'hide' });
      }
    } catch {}
  }
  async function exitBrowserFullscreen() {
    try {
      if (document.fullscreenElement && document.exitFullscreen) {
        await document.exitFullscreen();
      }
    } catch {}
  }

  function toggleFullscreen() {
    body.classList.toggle('dg-fullscreen');
    if (isFS()) enterBrowserFullscreen(); else exitBrowserFullscreen();
    if (!isFS() && isTH()) body.classList.remove('dg-theatre');
    applyState();
  }
  function toggleTheatre() {
    if (!isFS()) return;
    body.classList.toggle('dg-theatre');
    applyState();
  }

  fsBtn?.addEventListener('click', toggleFullscreen);
  thBtn?.addEventListener('click', toggleTheatre);

  document.addEventListener('keydown', (e) => {
    if (e.target && /input|textarea|select/i.test(e.target.tagName)) return;
    if (e.key.toLowerCase() === 'f') { e.preventDefault(); toggleFullscreen(); }
    if (e.key.toLowerCase() === 't') { e.preventDefault(); toggleTheatre(); }
    if (e.key === 'Escape') {
      body.classList.remove('dg-theatre', 'dg-fullscreen');
      applyState();
      exitBrowserFullscreen();
    }
  });

  try {
    const saved = JSON.parse(localStorage.getItem('dg:view') || '{}');
    if (saved.fs) body.classList.add('dg-fullscreen');
    if (saved.th) body.classList.add('dg-theatre');
    if (saved.fs) enterBrowserFullscreen();
  } catch {}

  applyState(true);
})();
</script>



  </body>
</html>
