/* custom-style.scss - Overrides and custom styles for Digital Garden Plugin
 * This file loads after style.css and takes precedence.
 * Make any custom changes here.
 */

/*============================
=     CSS Variables        =
============================*/
:root {
  // Gradient Background Colors (Top to Bottom)
  --bg-gradient-top: #8e44ad;    // adjust to your preferred top color
  --bg-gradient-bottom: #000000; // adjust to your preferred bottom color

  // Core Palette
  --color-primary:   #4A90E2;
  --color-secondary: #50C878;
  --color-accent:    #FF6B6B;
  --color-success:   #28a745;
  --color-warning:   #ffc107;
  --color-danger:    #dc3545;
  --color-info:      #17a2b8;
  --color-neutral:   #7a7a7a;

  // Typography
  --font-main:      'Inter', sans-serif;
  --font-mono:      'JetBrains Mono', monospace;
  --font-heading:   'Poppins', sans-serif;

  // Spacing Scale
  --space-xs: 4px;
  --space-sm: 8px;
  --space-md: 16px;
  --space-lg: 24px;
  --space-xl: 32px;

  // Border & Radius
  --radius-sm: 4px;
  --radius-md: 8px;
  --radius-lg: 16px;

  // Shadows
  --shadow-light: 0 2px 8px rgba(0,0,0,0.1);
  --shadow-heavy: 0 4px 16px rgba(0,0,0,0.2);
}

/*============================
=      SCSS Mixins         =
============================*/

// Gradient Background Mixin
@mixin gradient-bg(
  $direction: to top,
  $start: var(--bg-gradient-bottom),
  $end: var(--bg-gradient-top)
) {
  background: linear-gradient($direction, $start, $end);
}

// Center content flex
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Fluid typography
@mixin fluid-type($min-size, $max-size, $min-vw: 320px, $max-vw: 1200px) {
  font-size: clamp($min-size, #{($min-size / $min-vw) * 100}vw, $max-size);
}

// Container
@mixin container($max-width: 750px) {
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--space-md);
  padding-right: var(--space-md);
}

/*============================
=      Global Styles        =
============================*/

body {
  @include gradient-bg();
  background-attachment: fixed;
  color: var(--text-normal);
  font-family: var(--font-main);
  line-height: 1.6;
  @include container(100%);
  transition: background 0.5s ease;
}

// Links
a {
  color: var(--color-accent);
  text-decoration: none;
  border-bottom: 1px solid transparent;
  transition: border-color 0.2s ease;
  &:hover, &:focus {
    border-color: var(--color-accent);
  }
}

a.is-unresolved {
  opacity: 0.7;
  border-bottom-style: dashed;
}

// Headings
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-heading);
  margin-top: var(--space-lg);
  margin-bottom: var(--space-md);
  line-height: 1.2;
}
h1 {@include fluid-type(2rem, 3rem);} h2 {@include fluid-type(1.75rem, 2.5rem);} h3 {@include fluid-type(1.5rem, 2rem);} h4 {@include fluid-type(1.25rem, 1.75rem);} h5 {@include fluid-type(1.1rem, 1.5rem);} h6 {@include fluid-type(1rem, 1.25rem);}

// Buttons
%button-base {
  padding: var(--space-sm) var(--space-md);
  border: none;
  border-radius: var(--radius-md);
  font: inherit;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.button {
  @extend %button-base;
  &--primary { background: var(--color-primary); color: white; }
  &--secondary { background: var(--color-secondary); color: white; }
  &--accent { background: var(--color-accent); color: white; }
  &--outline {
    background: transparent;
    border: 2px solid currentColor;
  }
  &:hover { transform: translateY(-2px); box-shadow: var(--shadow-light); }
}

// Cards
.card {
  background: var(--background-secondary);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-light);
  padding: var(--space-lg);
  margin-bottom: var(--space-lg);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  &:hover { transform: translateY(-4px); box-shadow: var(--shadow-heavy); }
}

// Code blocks
pre, code {
  background: rgba(0,0,0,0.1);
  font-family: var(--font-mono);
  border-radius: var(--radius-sm);
}
pre {
  padding: var(--space-md);
  overflow-x: auto;
}
code {
  padding: 0.2em 0.4em;
}

// Tables
table {
  width: 100%;
  border-collapse: collapse;
  margin: var(--space-md) 0;
  th, td {
    border: 1px solid var(--border-color);
    padding: var(--space-sm);
    text-align: left;
  }
  tr:nth-child(even) { background: rgba(0,0,0,0.05); }
}

// Blockquote
blockquote {
  border-left: 4px solid var(--color-info);
  background: rgba(0,0,0,0.05);
  padding: var(--space-md);
  margin: var(--space-lg) 0;
  font-style: italic;
}

// Utility Classes
.text-center { text-align: center; }
.mt-lg { margin-top: var(--space-lg); }
.mb-lg { margin-bottom: var(--space-lg); }
.p-md { padding: var(--space-md); }
.hide-scrollbar { scrollbar-width: none; -ms-overflow-style: none; &::-webkit-scrollbar { display: none; } }

// Responsive
@media (max-width: 800px) {
  body { font-size: 16px; }
  .content { padding: var(--space-sm); }
}

/*============================
=    End of custom-style    =
============================*/
